{"version":3,"file":"example.cec4bbd78acf0b5d.hot-update.js","sources":["C:/Users/oneirocosm/Code/Repositories/oncemore/moondunk2025/src/browser/dashboard/example.tsx","webpack/runtime/get_full_hash"],"sourcesContent":["import Button from '@mui/material/Button';\r\nimport { useReplicant } from '@nodecg/react-hooks';\r\nimport { Donation } from '../../types/donation';\r\nimport { DashboardThemeProvider } from './components/DashboardThemeProvider';\r\nimport React from \"react\";\r\nimport Countdown from \"react-countdown\";\r\nimport { motion, AnimatePresence } from 'framer-motion';\r\nimport { render } from '../render';\r\nimport './css/style.css';\r\nimport {randomUUID} from \"crypto\";\r\n\r\nconst MOONSHOT_CORE_DARK = '#040328';\r\nconst MOONSHOT_CORE_PINK = '#D50078';\r\nconst MOONSHOT_CORE_YELLOW = '#FFEE83';\r\nconst MOONSHOT_EXTRA_DARK_BLUE = '#1B1971';\r\nconst MOONSHOT_EXTRA_BLUE = '#467BF8';\r\nconst MOONSHOT_EXTRA_LIGHT_BLUE = '#A8BDF0';\r\nconst MOONSHOT_EXTRA_BURGUNDY = '#990066';\r\nconst MOONSHOT_EXTRA_PINK = '#FCACC7';\r\nconst MOONSHOT_EXTRA_ORANGE = '#E68600';\r\nconst MOONSHOT_EXTRA_GOLD = '#FFC022';\r\n\r\nconst initRowItem = {\r\n  opacity: 0,\r\n  y: 16,\r\n  scale: 0.98,\r\n  filter: 'blur(4px)',\r\n  boxShadow: `0 0 0 0 transparent`,\r\n};\r\nconst animateRowItem = {\r\n  opacity: 1,\r\n  y: 0,\r\n  scale: 1,\r\n  filter: 'blur(0px)',\r\n  boxShadow: `0 0 0 0 transparent`,\r\n};\r\nconst exitRowItem = {\r\n  opacity: 0,\r\n  y: -16,\r\n  scale: 0.98,\r\n  filter: 'blur(4px)',\r\n  boxShadow: `0 0 0 0 transparent`,\r\n};\r\nconst transitionRowItem = {\r\n  duration: 0.5,\r\n  ease: \"easeOut\",\r\n};\r\n\r\ninterface TwitchSub {\r\n\tuser_name: string;\r\n\tuser_id: string;\r\n}\r\n\r\nconst App = () => {\r\n  const [queuedDonations, _] = useReplicant<Array<Donation>>('queueddonations');\r\n  const [dispensing, setDispensing] = React.useState<Donation | undefined>(undefined);\r\n  const [nondispensing, setNondispensing] = React.useState<Array<Donation>>([]);\r\n  const [twitchSubs, setTwitchSubs] = useReplicant<Array<TwitchSub>>(\"twitchsubs\");\r\n  const [manualDonoName, setManualDonoName] = React.useState<string>(\"\");\r\n  const [manualDonoAmount, setManualDonoAmount] = React.useState<string>(\"\");\r\n  const [overriddenTotal, setOverriddenTotal] = React.useState<number>(0);\r\n\r\n  React.useEffect(() => {\r\n    if (queuedDonations == undefined || queuedDonations.length == 0) {\r\n      setDispensing(undefined);\r\n      setNondispensing([]);\r\n      return;\r\n    }\r\n    setDispensing(queuedDonations[0]);\r\n    setNondispensing(queuedDonations.slice(1));\r\n  }, [queuedDonations]);\r\n\r\n  const dispensingCountdown = React.useMemo(() => {\r\n    if (dispensing == undefined) {\r\n      return <></>\r\n    }\r\n    return <Countdown \r\n      date={Date.now() + donationToSeconds(dispensing.amountDisplay)*1000}\r\n      intervalDelay={0}\r\n      precision={2}\r\n      renderer={(props) => <span>{(Math.floor(props.total) / 1000).toFixed(2)}s</span>}\r\n    />\r\n\r\n  }, [dispensing?.id])\r\n\r\n\r\n\r\n  return (\r\n    <DashboardThemeProvider>\r\n      <div style={{\r\n        backgroundColor: MOONSHOT_CORE_DARK,\r\n        width: \"100%\",\r\n        maxWidth: \"400px\",\r\n        minHeight: \"200px\",\r\n        padding: \"14px\",\r\n        borderRadius: \"10px\",\r\n        border: `solid 3px ${MOONSHOT_CORE_PINK}`,\r\n        color: MOONSHOT_CORE_PINK,\r\n        fontFamily: \"Exo2\",\r\n        marginBottom: 20,\r\n      }}>\r\n      <div style={{width: \"100%\", borderBottom: `solid 3px ${MOONSHOT_CORE_PINK}`, fontWeight: 600}}>Twitch Subs</div>\r\n      <div style={{\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        gap: \"10px\",\r\n        maxHeight: \"400px\",\r\n        overflowY: \"hidden\",\r\n      }}>\r\n        <AnimatePresence>\r\n        {twitchSubs?.map((sub: TwitchSub, idx) => {\r\n\r\n          return <motion.div key={`twitch-sub-hbox-${sub.user_id}`}\r\n            initial={{ height: 0, opacity: 0 }}\r\n            animate={{ height: 'auto', opacity: 1 }}\r\n            exit={{ height: 0, opacity: 0 }}\r\n            transition={{ duration: 0.2, ease: 'easeOut' }}\r\n          >\r\n          <motion.div key={`twitch-sub-row-${sub.user_id}`} style={{\r\n          display: \"flex\",\r\n          flexDirection: \"row\",\r\n          justifyContent: \"flex-end\",\r\n          gap: \"10px\",\r\n          width: \"100%\",\r\n          maxWidth: \"400px\",\r\n          backgroundColor: idx % 2 == 0 ? \"inherit\" : '#040348'\r\n        }}\r\n        initial={initRowItem}\r\n        animate={{...animateRowItem, }}\r\n        exit={exitRowItem}\r\n        transition={transitionRowItem}\r\n        >\r\n          <span style={{\r\n            textOverflow: \"ellipsis\",\r\n            overflowX: \"hidden\",\r\n            whiteSpace: \"nowrap\",\r\n            flexGrow: 1,\r\n          }}>{sub.user_name}</span>\r\n          <Button style={{\r\n            minWidth: \"80px\",\r\n            width: \"80px\",\r\n            height: \"80%\",\r\n            flex: \"0 0 80px\",\r\n            backgroundColor: \"red\",\r\n            color: \"white\",\r\n          }}\r\n          onClick={() => setTwitchSubs(twitchSubs?.filter((arbSub) => arbSub.user_id != sub.user_id))}\r\n          >&times;</Button>\r\n        </motion.div>\r\n        </motion.div>\r\n        })}\r\n        </AnimatePresence>\r\n        </div>\r\n        </div>\r\n\r\n      <div style={{\r\n        backgroundColor: MOONSHOT_CORE_DARK,\r\n        width: \"100%\",\r\n        maxWidth: \"400px\",\r\n        minHeight: \"200px\",\r\n        padding: \"14px\",\r\n        borderRadius: \"10px\",\r\n        border: `solid 3px ${MOONSHOT_CORE_YELLOW}`,\r\n        fontFamily: \"Exo2\",\r\n      }}>\r\n      <div style={{\r\n        display: \"flex\",\r\n        flexDirection: \"row\",\r\n        justifyContent: \"flex-end\",\r\n        fontWeight: 600,\r\n        gap: \"10px\",\r\n        borderBottom: `solid 3px ${MOONSHOT_CORE_YELLOW}`,\r\n        marginBottom: \"10px\",\r\n        color: MOONSHOT_CORE_YELLOW,\r\n      }}>\r\n        <span style={{\r\n          flex: \"1 1 auto\",\r\n\r\n        }}>Donor</span>\r\n        <span style={{\r\n          width: \"80px\",\r\n          minWidth: \"80px\",\r\n          flex: \"0 0 80px\",\r\n        }}>Amount</span>\r\n        <span style={{\r\n          width: \"80px\",\r\n          minWidth: \"80px\",\r\n          flex: \"0 0 80px\",\r\n        }}>Time</span>\r\n      </div>\r\n      <div style={{\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        gap: \"10px\",\r\n      }}>\r\n        <AnimatePresence>\r\n        {\r\n          dispensing && <motion.div key={`donation-row-hbox-${dispensing.id}`}\r\n            initial={{ height: 0, opacity: 0 }}\r\n            animate={{ height: 'auto', opacity: 1 }}\r\n            exit={{ height: 0, opacity: 0 }}\r\n            transition={{ duration: 0.7, ease: 'easeOut' }}\r\n          >\r\n          <motion.div key={`donation-row-${dispensing.id}`} style={{\r\n          display: \"flex\",\r\n          flexDirection: \"row\",\r\n          justifyContent: \"flex-end\",\r\n          gap: \"10px\",\r\n          width: \"100%\",\r\n          maxWidth: \"400px\",\r\n          borderRadius: \"7px\",\r\n          padding: \"2px\",\r\n          transformOrigin: \"center left\",\r\n        }}\r\n        initial={initRowItem}\r\n        animate={{...animateRowItem, boxShadow: `0 0 0 3px ${MOONSHOT_CORE_PINK}`, fontSize: \"22px\", fontWeight: 600, backgroundColor: MOONSHOT_EXTRA_DARK_BLUE, color: MOONSHOT_EXTRA_GOLD}}\r\n        exit={exitRowItem}\r\n        transition={transitionRowItem}\r\n        >\r\n          <span style={{\r\n            textOverflow: \"ellipsis\",\r\n            overflowX: \"hidden\",\r\n            whiteSpace: \"nowrap\",\r\n            flexGrow: 1,\r\n          }}>{dispensing.donor_name}</span>\r\n          <span style={{\r\n            minWidth: \"80px\",\r\n            width: \"80px\",\r\n            flex: \"0 0 80px\",\r\n          }}>${dispensing.amountDisplay.toFixed(2)}</span>\r\n          <span style={{\r\n            minWidth: \"80px\",\r\n            width: \"80px\",\r\n            flex: \"0 0 80px\",\r\n            fontVariantNumeric: \"tabular-nums\",\r\n          }}>{dispensingCountdown}</span>\r\n        </motion.div>\r\n        </motion.div>\r\n\r\n        }\r\n        {nondispensing?.map((donation: Donation, idx) => {\r\n          const time = Math.floor(donationToSeconds(donation.amountDisplay) * 100) / 100;\r\n\r\n          return <motion.div key={`donation-row-hbox-${donation.id}`}\r\n            initial={{ height: 0, opacity: 0 }}\r\n            animate={{ height: 'auto', opacity: 1 }}\r\n            exit={{ height: 0, opacity: 0 }}\r\n            transition={{ duration: 0.2, ease: 'easeOut' }}\r\n          >\r\n          <motion.div key={`donation-row-${donation.id}`} style={{\r\n          display: \"flex\",\r\n          flexDirection: \"row\",\r\n          justifyContent: \"flex-end\",\r\n          gap: \"10px\",\r\n          width: \"100%\",\r\n          maxWidth: \"400px\",\r\n          backgroundColor: idx % 2 == 0 ? \"inherit\" : '#040348'\r\n        }}\r\n        initial={initRowItem}\r\n        animate={{...animateRowItem, }}\r\n        exit={exitRowItem}\r\n        transition={transitionRowItem}\r\n        >\r\n          <span style={{\r\n            textOverflow: \"ellipsis\",\r\n            overflowX: \"hidden\",\r\n            whiteSpace: \"nowrap\",\r\n            flexGrow: 1,\r\n          }}>{donation.donor_name}</span>\r\n          <span style={{\r\n            minWidth: \"80px\",\r\n            width: \"80px\",\r\n            flex: \"0 0 80px\",\r\n          }}>${donation.amountDisplay.toFixed(2)}</span>\r\n          <span style={{\r\n            minWidth: \"80px\",\r\n            width: \"80px\",\r\n            flex: \"0 0 80px\",\r\n            fontVariantNumeric: \"tabular-nums\",\r\n          }}>{time.toFixed(2)}s</span>\r\n        </motion.div>\r\n        </motion.div>\r\n        })}</AnimatePresence>\r\n      </div>\r\n      </div>\r\n      <span>Manual Donation Input</span>\r\n      <form onSubmit={() => manualEntry()}>\r\n        <span>Name:&nbsp;</span><input value={manualDonoName} onChange={(e) => setManualDonoName(e.currentTarget.value)}/>\r\n        <span>Amount:&nbsp;</span><input value={manualDonoAmount} onChange={(e) => setManualDonoAmount(e.currentTarget.value)}/>\r\n        <button type=\"submit\">Submit</button>\r\n      </form>\r\n    </DashboardThemeProvider>\r\n  );\r\n};\r\n\r\nfunction donationToSeconds(donationAmount: number): number {\r\n\tconst WATER_RATE = nodecg.bundleConfig[\"MOONDUNK_RATE\"] ?? 1; // estimated gallons_per_second\r\n\tconst BUCKET_VOLUME = nodecg.bundleConfig[\"MOONDUNK_VOLUME\"] ?? 1; // estemated gallons\r\n\tconst DOLLAR_GOAL = nodecg.bundleConfig[\"MOONDUNK_GOAL\"] ?? 1; // estimated USD per dunk\r\n\tconst TIME_PER_DOLLAR = BUCKET_VOLUME / (WATER_RATE * DOLLAR_GOAL);\r\n\r\n  return donationAmount * TIME_PER_DOLLAR;\r\n}\r\n\r\nrender(<App />);\r\n","__webpack_require__.h = () => (\"217cea772fcd358a\")"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAOA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAAA;AAAA;;;;;;;;;;;;AAGA;AAAA;AAAA;AAIA;;AAEA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAEA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;;AAEA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;;;;;;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AA7BA;;;;;AANA;;;;;AAsCA;;;;;;;;;;;;;;;;;AAKA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AAAA;AACA;AAEA;AAAA;;;;;;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;;;;;;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;;;;;;;;;;;;AAEA;AAAA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAEA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;;AAEA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;;;;;;AACA;AAAA;AACA;AACA;AACA;AACA;;AAAA;AAAA;;;;;;;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;;;;;;;AAhCA;;;;;AANA;;;;;AA2CA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAEA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;;AAEA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;;;;;;AACA;AAAA;AACA;AACA;AACA;AACA;;AAAA;AAAA;;;;;;;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;;AAAA;AAAA;;;;;;;;AA9BA;;;;;AANA;;;;;AAuCA;;;;;;;;;;;;;;;;;;AAGA;AAAA;;;;;;AACA;AAAA;;AACA;AAAA;;;;;;AAAA;AAAA;AAAA;;;;;;AACA;AAAA;;;;;;AAAA;AAAA;AAAA;;;;;;AACA;AAAA;AAAA;;;;;;;;;;;;;;;;;;AAIA;AAhPA;;AACA;AAGA;;;AAJA;AAkPA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;;;;;;;;;;;;;;;;;;;;;;;;AChTA"}